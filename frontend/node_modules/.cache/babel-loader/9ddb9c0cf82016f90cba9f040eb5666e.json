{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Pyramid Git\\\\online-ticketing-system\\\\frontend\\\\src\\\\components\\\\user-dashboard\\\\UserDashboardComponent.jsx\";\nimport React, { Component } from 'react';\nimport LoginService from '../../services/LoginService';\nimport UserDashboardService from '../../services/user-dashboard/UserDashboardService';\n\nclass UserDashboardComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: null,\n      header: 'Please wait',\n      tickets: []\n    };\n  }\n\n  componentDidMount() {\n    LoginService.userLoggedIn().then(response => {\n      this.setState({\n        loggedIn: response.data\n      });\n\n      if (!this.state.loggedIn) {\n        // string is false if it is empty, null, or undefined\n        this.setState({\n          header: \"You are not logged in\"\n        });\n        this.props.history.push(\"/\");\n      } else {\n        this.setState({\n          header: `Welcome ${this.state.loggedIn}!`\n        });\n        UserDashboardService.getTickets().then(response => {\n          this.setState({\n            tickets: response.data\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userDashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"ticketTable\",\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ticket ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Resolved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Closed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default UserDashboardComponent;","map":{"version":3,"sources":["D:/Documents/Pyramid Git/online-ticketing-system/frontend/src/components/user-dashboard/UserDashboardComponent.jsx"],"names":["React","Component","LoginService","UserDashboardService","UserDashboardComponent","constructor","props","state","loggedIn","header","tickets","componentDidMount","userLoggedIn","then","response","setState","data","history","push","getTickets","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,oBAAP,MAAiC,oDAAjC;;AAEA,MAAMC,sBAAN,SAAqCH,SAArC,CAA+C;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,MAAM,EAAE,aAFG;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,YAAY,CAACU,YAAb,GAA4BC,IAA5B,CAAiCC,QAAQ,IAAI;AACzC,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAEM,QAAQ,CAACE;AAApB,OAAd;;AACA,UAAI,CAAC,KAAKT,KAAL,CAAWC,QAAhB,EAA0B;AAAG;AAC3B,aAAKO,QAAL,CAAc;AAAEN,UAAAA,MAAM,EAAE;AAAV,SAAd;AACA,aAAKH,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OAHD,MAGO;AACL,aAAKH,QAAL,CAAc;AAACN,UAAAA,MAAM,EAAG,WAAU,KAAKF,KAAL,CAAWC,QAAS;AAAxC,SAAd;AACAL,QAAAA,oBAAoB,CAACgB,UAArB,GAAkCN,IAAlC,CAAuCC,QAAQ,IAAI;AACjD,eAAKC,QAAL,CAAc;AACZL,YAAAA,OAAO,EAAEI,QAAQ,CAACE;AADN,WAAd;AAGD,SAJD;AAKD;AACF,KAbH;AAeD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA,kBAAK,KAAKb,KAAL,CAAWE;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,+BACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AApD4C;;AAqD9C;AAED,eAAeL,sBAAf","sourcesContent":["import React, { Component } from 'react';\nimport LoginService from '../../services/LoginService';\nimport UserDashboardService from '../../services/user-dashboard/UserDashboardService';\n\nclass UserDashboardComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: null,\n      header: 'Please wait',\n      tickets: []\n    }\n  }\n\n  componentDidMount() {\n    LoginService.userLoggedIn().then(response => {\n        this.setState({loggedIn: response.data});\n        if (!this.state.loggedIn) {  // string is false if it is empty, null, or undefined\n          this.setState({ header: \"You are not logged in\"});\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({header: `Welcome ${this.state.loggedIn}!`});\n          UserDashboardService.getTickets().then(response => {\n            this.setState({\n              tickets: response.data\n            })\n          });\n        }\n      }\n    );\n  }\n\n  render() {\n    return(\n      <div className=\"userDashboard\">\n        <h1>{this.state.header}</h1>\n        <table className=\"ticketTable\">\n          <thead>\n            <tr>\n              <th>Ticket ID</th>\n              <th>Issue</th>\n              <th>Description</th>\n              <th>Resolved</th>\n              <th>Closed</th>\n            </tr>\n          </thead>\n          {/* <tbody>\n            this.state.tickets.map(ticket => \n              <tr key={ticket.id}>\n\n              </tr>\n            );\n          </tbody> */}\n        </table>\n      </div>\n    )\n  }\n};\n\nexport default UserDashboardComponent;"]},"metadata":{},"sourceType":"module"}